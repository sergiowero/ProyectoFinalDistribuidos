/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import communication.MessageListener;
import communication.OpCode;
import communication.messages.Message;
import communication.messages.MessageCreator;
import communication.messages.NotifyPayload;
import communication.messages.PublishPayload;
import communication.multicast.MulticastClient;
import java.awt.Color;
import java.net.Inet4Address;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import storage.TopicFile;

/**
 *
 * @author Laura
 */
public class AppWindow extends javax.swing.JFrame implements MessageListener {

    /**
     * Creates new form Window
     */
    public int currentTopicIndex;
    public boolean isTittleTopicWrite;
    public boolean isContentTopicWrite;

    public final static String TOPIC_TITULACION_0 = "Mensajes_titulacion";
    public final static String TOPIC_QUEJAS_1 = "Quejas_Sugerencias";
    public final static String TOPIC_SERVICIOS_2 = "Servicios_UAG";
    public final static String TOPIC_CARGAS_3 = "Cargas";
    public final static String TOPIC_EVENTOS_4 = "Eventos";
    public final static String TOPIC_TESIS_5 = "Repositorio_Tesis";
    public final static String TOPIC_CONACYT_6 = "Conacyt";
    public final static String TOPIC_TAREAS_7 = "Tareas";
    public final static String TOPIC_PROYECTOS_8 = "Proyectos";
    public final static String TOPIC_EXAMENES_9 = "Examenes";
    public final static String TOPIC_TRABAJO_10 = "Bolsa_Trabajo";
    public final static String TOPIC_PEDAS_11 = "Pedas";

    public final static Color COLOR_TITULACION_0 = new Color(102, 255, 255);
    public final static Color COLOR_QUEJAS_1 = new Color(102, 255, 204);
    public final static Color COLOR_SERVICIOS_2 = new Color(102, 255, 102);
    public final static Color COLOR_CARGAS_3 = new Color(178, 255, 102);
    public final static Color COLOR_EVENTOS_4 = new Color(255, 255, 102);
    public final static Color COLOR_TESIS_5 = new Color(255, 178, 102);
    public final static Color COLOR_CONACYT_6 = new Color(255, 102, 102);
    public final static Color COLOR_TAREAS_7 = new Color(255, 102, 178);
    public final static Color COLOR_PROYECTOS_8 = new Color(255, 102, 255);
    public final static Color COLOR_EXAMENES_9 = new Color(178, 102, 255);
    public final static Color COLOR_TRABAJO_10 = new Color(102, 102, 255);
    public final static Color COLOR_PEDAS_11 = new Color(102, 178, 255);

    public final static String MULTICAST_GROUP = "SistemasDistribuidos";

    public TopicFile[] topicsFiles;
    private int defaultIndex = -1;
    private MulticastClient multicastClient;
    private String myAdress;

    public AppWindow(String serverIp) {
        initComponents();

        multicastClient = new MulticastClient(serverIp);
        multicastClient.joinGroup(MULTICAST_GROUP);
        multicastClient.start(this);
        LoadBuffer();
        try {
            myAdress = Inet4Address.getLocalHost().getHostAddress();
            multicastClient.joinGroup(myAdress);
        } catch (UnknownHostException ex) {
            Logger.getLogger(AppWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        multicastClient.send(MULTICAST_GROUP, MessageCreator.CreateMessageFromPayload(new NotifyPayload(-1, "new_commer", myAdress.getBytes())));
        setDefaultTopic();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TopicsButtonGroup = new javax.swing.ButtonGroup();
        panelTopics = new javax.swing.JPanel();
        conacytCheckBox = new javax.swing.JCheckBox();
        quejasCheckBox = new javax.swing.JCheckBox();
        examenesCheckBox = new javax.swing.JCheckBox();
        cargasCheckBox = new javax.swing.JCheckBox();
        tareasCheckBox = new javax.swing.JCheckBox();
        pedasCheckBox = new javax.swing.JCheckBox();
        msjTitulacionCheckBox = new javax.swing.JCheckBox();
        proyectosCheckBox = new javax.swing.JCheckBox();
        serviciosCheckBox = new javax.swing.JCheckBox();
        eventosCheckBox = new javax.swing.JCheckBox();
        tesisCheckBox = new javax.swing.JCheckBox();
        trabajoCheckBox = new javax.swing.JCheckBox();
        panelShowTopic = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        panelShowTopic2 = new javax.swing.JPanel();
        topicSelectedLabel = new javax.swing.JLabel();
        tituloPubTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        publicarButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mostrarTodoTextArea = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        contenidoPubTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setMinimumSize(new java.awt.Dimension(1198, 900));
        setPreferredSize(new java.awt.Dimension(1198, 900));

        panelTopics.setBackground(new java.awt.Color(0, 0, 0));
        panelTopics.setBorder(new javax.swing.border.MatteBorder(null));
        panelTopics.setForeground(new java.awt.Color(255, 255, 255));

        conacytCheckBox.setBackground(new java.awt.Color(255, 102, 102));
        TopicsButtonGroup.add(conacytCheckBox);
        conacytCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        conacytCheckBox.setForeground(new java.awt.Color(64, 64, 64));
        conacytCheckBox.setText("Todo conacyt");
        conacytCheckBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        conacytCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        conacytCheckBox.setFocusPainted(false);
        conacytCheckBox.setFocusable(false);
        conacytCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conacytCheckBoxActionPerformed(evt);
            }
        });

        quejasCheckBox.setBackground(new java.awt.Color(102, 255, 204));
        TopicsButtonGroup.add(quejasCheckBox);
        quejasCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        quejasCheckBox.setForeground(new java.awt.Color(64, 64, 64));
        quejasCheckBox.setText("Quejas y sugerencias");
        quejasCheckBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quejasCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        quejasCheckBox.setFocusPainted(false);
        quejasCheckBox.setFocusable(false);
        quejasCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quejasCheckBoxActionPerformed(evt);
            }
        });

        examenesCheckBox.setBackground(new java.awt.Color(178, 102, 255));
        TopicsButtonGroup.add(examenesCheckBox);
        examenesCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        examenesCheckBox.setForeground(new java.awt.Color(64, 64, 64));
        examenesCheckBox.setText("Examenes");
        examenesCheckBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        examenesCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        examenesCheckBox.setFocusPainted(false);
        examenesCheckBox.setFocusable(false);
        examenesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examenesCheckBoxActionPerformed(evt);
            }
        });

        cargasCheckBox.setBackground(new java.awt.Color(178, 255, 102));
        TopicsButtonGroup.add(cargasCheckBox);
        cargasCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cargasCheckBox.setForeground(new java.awt.Color(64, 64, 64));
        cargasCheckBox.setText("Cargas");
        cargasCheckBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cargasCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cargasCheckBox.setFocusPainted(false);
        cargasCheckBox.setFocusable(false);
        cargasCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargasCheckBoxActionPerformed(evt);
            }
        });

        tareasCheckBox.setBackground(new java.awt.Color(255, 102, 178));
        TopicsButtonGroup.add(tareasCheckBox);
        tareasCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tareasCheckBox.setForeground(new java.awt.Color(64, 64, 64));
        tareasCheckBox.setText("Tareas");
        tareasCheckBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tareasCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tareasCheckBox.setFocusPainted(false);
        tareasCheckBox.setFocusable(false);
        tareasCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tareasCheckBoxActionPerformed(evt);
            }
        });

        pedasCheckBox.setBackground(new java.awt.Color(102, 178, 255));
        TopicsButtonGroup.add(pedasCheckBox);
        pedasCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        pedasCheckBox.setForeground(new java.awt.Color(64, 64, 64));
        pedasCheckBox.setText("Pedas");
        pedasCheckBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pedasCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pedasCheckBox.setFocusPainted(false);
        pedasCheckBox.setFocusable(false);
        pedasCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedasCheckBoxActionPerformed(evt);
            }
        });

        msjTitulacionCheckBox.setBackground(new java.awt.Color(102, 255, 255));
        TopicsButtonGroup.add(msjTitulacionCheckBox);
        msjTitulacionCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        msjTitulacionCheckBox.setForeground(new java.awt.Color(64, 64, 64));
        msjTitulacionCheckBox.setText("Mensajes de titulación");
        msjTitulacionCheckBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        msjTitulacionCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        msjTitulacionCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msjTitulacionCheckBoxActionPerformed(evt);
            }
        });

        proyectosCheckBox.setBackground(new java.awt.Color(255, 102, 255));
        TopicsButtonGroup.add(proyectosCheckBox);
        proyectosCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        proyectosCheckBox.setForeground(new java.awt.Color(64, 64, 64));
        proyectosCheckBox.setText("Proyectos");
        proyectosCheckBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        proyectosCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        proyectosCheckBox.setFocusPainted(false);
        proyectosCheckBox.setFocusable(false);
        proyectosCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proyectosCheckBoxActionPerformed(evt);
            }
        });

        serviciosCheckBox.setBackground(new java.awt.Color(102, 255, 102));
        TopicsButtonGroup.add(serviciosCheckBox);
        serviciosCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        serviciosCheckBox.setForeground(new java.awt.Color(64, 64, 64));
        serviciosCheckBox.setText("Servicios UAG");
        serviciosCheckBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        serviciosCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        serviciosCheckBox.setFocusPainted(false);
        serviciosCheckBox.setFocusable(false);
        serviciosCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviciosCheckBoxActionPerformed(evt);
            }
        });

        eventosCheckBox.setBackground(new java.awt.Color(255, 255, 102));
        TopicsButtonGroup.add(eventosCheckBox);
        eventosCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        eventosCheckBox.setForeground(new java.awt.Color(64, 64, 64));
        eventosCheckBox.setText("Eventos");
        eventosCheckBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        eventosCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        eventosCheckBox.setFocusPainted(false);
        eventosCheckBox.setFocusable(false);
        eventosCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventosCheckBoxActionPerformed(evt);
            }
        });

        tesisCheckBox.setBackground(new java.awt.Color(255, 178, 102));
        TopicsButtonGroup.add(tesisCheckBox);
        tesisCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tesisCheckBox.setForeground(new java.awt.Color(64, 64, 64));
        tesisCheckBox.setText("Repositorio de tesis");
        tesisCheckBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tesisCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tesisCheckBox.setFocusPainted(false);
        tesisCheckBox.setFocusable(false);
        tesisCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tesisCheckBoxActionPerformed(evt);
            }
        });

        trabajoCheckBox.setBackground(new java.awt.Color(102, 102, 255));
        TopicsButtonGroup.add(trabajoCheckBox);
        trabajoCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        trabajoCheckBox.setForeground(new java.awt.Color(64, 64, 64));
        trabajoCheckBox.setText("Bolsa de trabajo");
        trabajoCheckBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        trabajoCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        trabajoCheckBox.setFocusPainted(false);
        trabajoCheckBox.setFocusable(false);
        trabajoCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trabajoCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTopicsLayout = new javax.swing.GroupLayout(panelTopics);
        panelTopics.setLayout(panelTopicsLayout);
        panelTopicsLayout.setHorizontalGroup(
            panelTopicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTopicsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTopicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(msjTitulacionCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(examenesCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(trabajoCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(proyectosCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(pedasCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(cargasCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(eventosCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(tesisCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(conacytCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(tareasCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(serviciosCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(quejasCheckBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelTopicsLayout.setVerticalGroup(
            panelTopicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTopicsLayout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(msjTitulacionCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(quejasCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(serviciosCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cargasCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(eventosCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tesisCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(conacytCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tareasCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(proyectosCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(examenesCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(trabajoCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pedasCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        panelShowTopic.setBackground(new java.awt.Color(0, 0, 0));
        panelShowTopic.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 32)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("UNIVERSIDAD AUTONOMA DE GUADALAJARA");

        jLabel3.setBackground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("    ");
        jLabel3.setEnabled(false);
        jLabel3.setFocusable(false);
        jLabel3.setInheritsPopupMenu(false);
        jLabel3.setOpaque(true);
        jLabel3.setRequestFocusEnabled(false);
        jLabel3.setVerifyInputWhenFocusTarget(false);

        panelShowTopic2.setBackground(new java.awt.Color(20, 20, 20));
        panelShowTopic2.setOpaque(false);

        topicSelectedLabel.setBackground(new java.awt.Color(153, 255, 255));
        topicSelectedLabel.setFont(new java.awt.Font("Arial", 3, 24)); // NOI18N
        topicSelectedLabel.setForeground(new java.awt.Color(64, 64, 64));
        topicSelectedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        topicSelectedLabel.setText("  Mensajes de titulación  ");
        topicSelectedLabel.setToolTipText("");
        topicSelectedLabel.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        topicSelectedLabel.setFocusable(false);
        topicSelectedLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        topicSelectedLabel.setOpaque(true);

        tituloPubTextField.setBackground(new java.awt.Color(204, 255, 204));
        tituloPubTextField.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tituloPubTextField.setBorder(new javax.swing.border.MatteBorder(null));
        tituloPubTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tituloPubTextFieldKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Titulo : ");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Mostrar todo");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Contenido : ");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Publicar");

        publicarButton.setBackground(new java.awt.Color(0, 204, 51));
        publicarButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        publicarButton.setText("Publicar");
        publicarButton.setBorder(null);
        publicarButton.setBorderPainted(false);
        publicarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicarButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setAutoscrolls(true);
        jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setRequestFocusEnabled(false);
        jScrollPane2.setVerifyInputWhenFocusTarget(false);

        mostrarTodoTextArea.setEditable(false);
        mostrarTodoTextArea.setBackground(new java.awt.Color(255, 255, 204));
        mostrarTodoTextArea.setColumns(20);
        mostrarTodoTextArea.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        mostrarTodoTextArea.setRows(5);
        mostrarTodoTextArea.setBorder(new javax.swing.border.MatteBorder(null));
        mostrarTodoTextArea.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        mostrarTodoTextArea.setSelectedTextColor(new java.awt.Color(255, 255, 204));
        mostrarTodoTextArea.setSelectionColor(new java.awt.Color(204, 255, 204));
        jScrollPane2.setViewportView(mostrarTodoTextArea);

        contenidoPubTextArea.setBackground(new java.awt.Color(204, 255, 204));
        contenidoPubTextArea.setColumns(20);
        contenidoPubTextArea.setRows(5);
        contenidoPubTextArea.setBorder(new javax.swing.border.MatteBorder(null));
        contenidoPubTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contenidoPubTextAreaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(contenidoPubTextArea);

        javax.swing.GroupLayout panelShowTopic2Layout = new javax.swing.GroupLayout(panelShowTopic2);
        panelShowTopic2.setLayout(panelShowTopic2Layout);
        panelShowTopic2Layout.setHorizontalGroup(
            panelShowTopic2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShowTopic2Layout.createSequentialGroup()
                .addGroup(panelShowTopic2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelShowTopic2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(publicarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelShowTopic2Layout.createSequentialGroup()
                        .addGroup(panelShowTopic2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelShowTopic2Layout.createSequentialGroup()
                                .addGap(308, 308, 308)
                                .addComponent(topicSelectedLabel))
                            .addGroup(panelShowTopic2Layout.createSequentialGroup()
                                .addGap(386, 386, 386)
                                .addComponent(jLabel4))
                            .addGroup(panelShowTopic2Layout.createSequentialGroup()
                                .addGap(394, 394, 394)
                                .addComponent(jLabel6)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelShowTopic2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelShowTopic2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelShowTopic2Layout.createSequentialGroup()
                                .addGroup(panelShowTopic2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelShowTopic2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tituloPubTextField)
                                    .addComponent(jScrollPane1)))
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );
        panelShowTopic2Layout.setVerticalGroup(
            panelShowTopic2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShowTopic2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(topicSelectedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelShowTopic2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tituloPubTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelShowTopic2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(publicarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout panelShowTopicLayout = new javax.swing.GroupLayout(panelShowTopic);
        panelShowTopic.setLayout(panelShowTopicLayout);
        panelShowTopicLayout.setHorizontalGroup(
            panelShowTopicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelShowTopicLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelShowTopicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelShowTopic2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelShowTopicLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 66, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelShowTopicLayout.setVerticalGroup(
            panelShowTopicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShowTopicLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelShowTopic2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTopics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelShowTopic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTopics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelShowTopic, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoadBuffer() {
        topicsFiles = new TopicFile[12];
        for (int i = 0; i < topicsFiles.length; i++) {
            topicsFiles[i] = new TopicFile(getTopic(i) + ".json");
            topicsFiles[i].load();
        }
    }

    private void setDefaultTopic() {
        //buscar que topico esta suscrito

        //por lo pronto se dejara en vacio
        selectedTopic(defaultIndex);

        msjTitulacionCheckBox.setOpaque(true);
        quejasCheckBox.setOpaque(true);
        serviciosCheckBox.setOpaque(true);
        cargasCheckBox.setOpaque(true);
        eventosCheckBox.setOpaque(true);
        tesisCheckBox.setOpaque(true);
        conacytCheckBox.setOpaque(true);
        tareasCheckBox.setOpaque(true);
        proyectosCheckBox.setOpaque(true);
        examenesCheckBox.setOpaque(true);
        trabajoCheckBox.setOpaque(true);
        pedasCheckBox.setOpaque(true);

        //mostrarTodoTextArea.setEditable(false);
    }

    private void publicarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicarButtonActionPerformed
        String titulo = tituloPubTextField.getText();
        String contenido = contenidoPubTextArea.getText();

        PublishPayload publishPayload = new PublishPayload(currentTopicIndex, titulo, contenido);
        Message msg = MessageCreator.CreateMessageFromPayload(publishPayload);

        multicastClient.send(MULTICAST_GROUP, msg);

        tituloPubTextField.setText("");
        contenidoPubTextArea.setText("");

        isTittleTopicWrite = false;
        isContentTopicWrite = false;

        publicarButton.setEnabled(false);
    }//GEN-LAST:event_publicarButtonActionPerformed

    private void msjTitulacionCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msjTitulacionCheckBoxActionPerformed
        selectedTopic(0);

    }//GEN-LAST:event_msjTitulacionCheckBoxActionPerformed

    private void quejasCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quejasCheckBoxActionPerformed
        selectedTopic(1);
    }//GEN-LAST:event_quejasCheckBoxActionPerformed

    private void serviciosCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviciosCheckBoxActionPerformed
        selectedTopic(2);
    }//GEN-LAST:event_serviciosCheckBoxActionPerformed

    private void cargasCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargasCheckBoxActionPerformed
        selectedTopic(3);
    }//GEN-LAST:event_cargasCheckBoxActionPerformed

    private void eventosCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventosCheckBoxActionPerformed
        selectedTopic(4);
    }//GEN-LAST:event_eventosCheckBoxActionPerformed

    private void tesisCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tesisCheckBoxActionPerformed
        selectedTopic(5);
    }//GEN-LAST:event_tesisCheckBoxActionPerformed

    private void conacytCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conacytCheckBoxActionPerformed
        selectedTopic(6);
    }//GEN-LAST:event_conacytCheckBoxActionPerformed

    private void tareasCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tareasCheckBoxActionPerformed
        selectedTopic(7);
    }//GEN-LAST:event_tareasCheckBoxActionPerformed

    private void proyectosCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proyectosCheckBoxActionPerformed
        selectedTopic(8);
    }//GEN-LAST:event_proyectosCheckBoxActionPerformed

    private void examenesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examenesCheckBoxActionPerformed
        selectedTopic(9);
    }//GEN-LAST:event_examenesCheckBoxActionPerformed

    private void trabajoCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trabajoCheckBoxActionPerformed
        selectedTopic(10);
    }//GEN-LAST:event_trabajoCheckBoxActionPerformed

    private void pedasCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedasCheckBoxActionPerformed
        selectedTopic(11);
    }//GEN-LAST:event_pedasCheckBoxActionPerformed

    private void contenidoPubTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contenidoPubTextAreaKeyReleased
        if (!contenidoPubTextArea.getText().trim().equals("")) {
            isContentTopicWrite = true;
        } else {
            isContentTopicWrite = false;
        }

        checkPublication();
    }//GEN-LAST:event_contenidoPubTextAreaKeyReleased

    private void tituloPubTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tituloPubTextFieldKeyReleased
        if (!tituloPubTextField.getText().trim().equals("")) {
            isTittleTopicWrite = true;
        } else {
            isTittleTopicWrite = false;
        }

        checkPublication();
    }//GEN-LAST:event_tituloPubTextFieldKeyReleased

    private void checkPublication() {
        if (currentTopicIndex < 0) {
            return;
        }

        if (isTittleTopicWrite && isContentTopicWrite) {
            if (!publicarButton.isEnabled()) {
                publicarButton.setEnabled(true);
            }
        } else if (publicarButton.isEnabled()) {
            publicarButton.setEnabled(false);
        }

    }

    private void selectedTopic(int indexTopic) {
        if (indexTopic == currentTopicIndex) {
            return;
        }

        currentTopicIndex = indexTopic;

        topicSelectedLabel.setBackground(getColorTopic(currentTopicIndex));
        topicSelectedLabel.setText(getMessageTopic(currentTopicIndex));

        tituloPubTextField.setText("");
        contenidoPubTextArea.setText("");

        isTittleTopicWrite = false;
        isContentTopicWrite = false;

        if (currentTopicIndex > -1) {
            mostrarTodoTextArea.setText(topicsFiles[currentTopicIndex].toString());
        } else {
            mostrarTodoTextArea.setText("");
        }
        publicarButton.setEnabled(false);
    }

    public synchronized void informationUpdate() {
        mostrarTodoTextArea.setText(topicsFiles[currentTopicIndex].toString());
    }

    public static String getTopic(int opcTopic) {
        switch (opcTopic) {
            case 0:
                return TOPIC_TITULACION_0;
            case 1:
                return TOPIC_QUEJAS_1;
            case 2:
                return TOPIC_SERVICIOS_2;
            case 3:
                return TOPIC_CARGAS_3;
            case 4:
                return TOPIC_EVENTOS_4;
            case 5:
                return TOPIC_TESIS_5;
            case 6:
                return TOPIC_CONACYT_6;
            case 7:
                return TOPIC_TAREAS_7;
            case 8:
                return TOPIC_PROYECTOS_8;
            case 9:
                return TOPIC_EXAMENES_9;
            case 10:
                return TOPIC_TRABAJO_10;
            case 11:
                return TOPIC_PEDAS_11;
            default:
                return "NO EXISTE";

        }
    }

    private String getMessageTopic(int opcTopic) {
        switch (opcTopic) {
            case 0:
                return "**MENSAJES DE TITULACION**";
            case 1:
                return "***QUEJAS Y SUGERENCIAS***";
            case 2:
                return "******SERVICIOS UAG*******";
            case 3:
                return "*********CARGAS***********";
            case 4:
                return "********EVENTOS***********";
            case 5:
                return "***REPOSITORIO DE TESIS***";
            case 6:
                return "******TODO CONACYT********";
            case 7:
                return "*********TAREAS***********";
            case 8:
                return "*******PROYECTOS**********";
            case 9:
                return "*******EXAMENES***********";
            case 10:
                return "****BOLSA DE TRABAJO******";
            case 11:
                return "*********PEDAS************";
            default:
                return "NO HAY TOPICO SELECCIONADO";

        }
    }

    private Color getColorTopic(int opcTopic) {
        switch (opcTopic) {
            case 0:
                return COLOR_TITULACION_0;
            case 1:
                return COLOR_QUEJAS_1;
            case 2:
                return COLOR_SERVICIOS_2;
            case 3:
                return COLOR_CARGAS_3;
            case 4:
                return COLOR_EVENTOS_4;
            case 5:
                return COLOR_TESIS_5;
            case 6:
                return COLOR_CONACYT_6;
            case 7:
                return COLOR_TAREAS_7;
            case 8:
                return COLOR_PROYECTOS_8;
            case 9:
                return COLOR_EXAMENES_9;
            case 10:
                return COLOR_TRABAJO_10;
            case 11:
                return COLOR_PEDAS_11;
            default:
                return Color.GRAY;

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        final String ip;
        if (args.length > 0) {
            ip = args[0];
        } else {
            ip = "127.0.0.1";
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AppWindow(ip).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup TopicsButtonGroup;
    private javax.swing.JCheckBox cargasCheckBox;
    private javax.swing.JCheckBox conacytCheckBox;
    private javax.swing.JTextArea contenidoPubTextArea;
    private javax.swing.JCheckBox eventosCheckBox;
    private javax.swing.JCheckBox examenesCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea mostrarTodoTextArea;
    private javax.swing.JCheckBox msjTitulacionCheckBox;
    private javax.swing.JPanel panelShowTopic;
    private javax.swing.JPanel panelShowTopic2;
    private javax.swing.JPanel panelTopics;
    private javax.swing.JCheckBox pedasCheckBox;
    private javax.swing.JCheckBox proyectosCheckBox;
    private javax.swing.JButton publicarButton;
    private javax.swing.JCheckBox quejasCheckBox;
    private javax.swing.JCheckBox serviciosCheckBox;
    private javax.swing.JCheckBox tareasCheckBox;
    private javax.swing.JCheckBox tesisCheckBox;
    private javax.swing.JTextField tituloPubTextField;
    private javax.swing.JLabel topicSelectedLabel;
    private javax.swing.JCheckBox trabajoCheckBox;
    // End of variables declaration//GEN-END:variables

    @Override
    public void messageReceived(Message message) {

        if (message.getOpCode().equals(OpCode.PUBLISH)) {
            PublishPayload publishPayload = (PublishPayload) MessageCreator.CreatePayloadFromMessage(message);

            int topicIndex = publishPayload.getTopic();
            topicsFiles[topicIndex].add(publishPayload);
            byte[] data = topicsFiles[topicIndex].save();

            NotifyPayload update = new NotifyPayload(topicIndex, "data_update", data);
            multicastClient.send(MULTICAST_GROUP, MessageCreator.CreateMessageFromPayload(update));
            if (topicIndex == currentTopicIndex) {
                informationUpdate();
            }

        } else if (message.getOpCode().equals(OpCode.NOTIFY)) {
            NotifyPayload notif = (NotifyPayload) MessageCreator.CreatePayloadFromMessage(message);

            if (notif.getAction().equals("data_update")) {
                topicsFiles[notif.getTopic()].update(notif.getData());
                if (notif.getTopic() == currentTopicIndex) {
                    informationUpdate();
                }
            } else if (notif.getAction().equals("new_commer")) {

                String peerAddress = new String(notif.getData());

                if (!peerAddress.equals(myAdress)) {

                    for (int i = 0; i < topicsFiles.length; i++) {
                        byte[] topicData = topicsFiles[i].save();
                        NotifyPayload update = new NotifyPayload(i, "data_update", topicData);
                        multicastClient.send(peerAddress, MessageCreator.CreateMessageFromPayload(update));
                    }
                }
            }

        }
    }
}
